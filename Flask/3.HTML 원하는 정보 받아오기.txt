1. HTML에서 무언가를 작성했을 때 파이썬으로 넘기는 방법을 배울 것임

2. 넘겨주려면 HTML에 먼저 작업을 진행해줌, apply.html에서 진행함

	    <form action = "/applyphoto" method = "get">
    	    <input placeholder = "위치를 입력하세요" required name = "location">
    	    <input type = "checkbox" name = "clean" value = "clean">
    	    <textarea name = "built" placeholder = "빌트인 항목" cols = "45" rows = "4" required/></textarea>
    	    <button>사진 이어서 입력하기</button>
    	    </form>

3. <form action 입력을 받을 수 있게 <form>와 action은 태그 이후 뭘 할 것인지 정의

4. 순서는 글에 대한 내용을 받고 -> 사진을 입력하기 위해 다음 페이지를 받고 -> 후에 사진 입력 순서로 진행할 것임

5. <form action = "/applyphoto"  

	-> applyphoto라는 액션을 취할 것

6. <form action = "/applyphoto" method = "get">

	-> applyphoto 액션과 get이라는 메서드를 적용할 것

7. <input>은 간단한 입력창이고 포털사이트 검색창을 생각하면 됨

8. <input placeholder = "위치를 입력하세요" 

	-> placeholder는 검색창에 입력값을 작성 전에입력 유도 텍스트임

9. <input placeholder = "위치를 입력하세요" required name = "location">  

	-> name 출력 이름 지정
	-> required 필수로 입력하게끔 할 것

10. <input type = "checkbox" name = "clean" value = "clean"> 

	-> type = "checkbox" 체크박스 생성
	-> name, value 우선 똑같이 만듦, 깨끗한지 여부를 체크하는 용도

11. <textarea name = "built" placeholder = "빌트인 항목" cols = "45" rows = "4" required/></textarea>

	-> required 필수로 입력하게끔 할 것

12. <button>사진 이어서 입력하기</button>

	-> 버튼 생성

	  
  
	   @application.route("/applyphoto")
	    def photo_apply():
    	    	location = request.args.get("location")
    		cleaness = request.args.get("clean")
    		built_in = request.args.get("built")
    		print(location, cleaness, built_in)



13. HTML 작업 후 application.py에 돌아와서 이전에 action에서 정의한 /applyphoto 를 만듦

	-> @application.route("/applyphoto")
	     def photo_apply():

14. 모듈 import에 request 추가

	-> from flask import Flask, render_template, request

15. HTML에서 작업했던 name, value들을 받기 위해서 [ 변수 = request.args.get("name or value") ] 형태로 작성

	->  @application.route("/applyphoto")
	     def photo_apply():
    		location = request.args.get("location")
   		cleaness = request.args.get("clean")
    		built_in = request.args.get("built")

