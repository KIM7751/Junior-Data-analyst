1. 사진을 등록하기 위한 웹 페이지가 필요하므로 이전에 노션 웹페이지의 html 소스 코드를 복사해 붙여넣기 함

2. apply_photo.html 소스코드 하단에 사진을 붙여 넣는 코드를 작성함

3. <form method = "POST" enctype = "multipart/form-data" action = "{{ url_for('upload_done')}}">
        <input type = "file" name = "file"/>
        <input type = "submit"/>
    </form>

	-> POST 웹 페이지를 넘길 때 주소창에 넘기는 내용 포함X // get 웹 페이지를 넘길 때 주소창에 넘기는 내용 포함

	-> "multipart/form-data" 사진 여러개를 올릴때 쓰는 타입

    	-> action 보내고 싶은 곳 설정

    	-> {{url_for('upload_done')}} 'upload_done' 경로로 url을 보냄

    	-> input type = "file" name = "file" // file 형태를 업로드

    	-> input type = "submit" // 제출 버튼

4. 	from flask import Flask, render_template, request, redirect, url_for
   
   	@application.route("/apply")
   	def apply():
    		return render_template("apply.html")

   	@application.route("/applyphoto")
   	def photo_apply():
    		location = request.args.get("location")
    		cleaness = request.args.get("clean")
    		built_in = request.args.get("built")
    		print(location, cleaness, built_in)
    		return render_template("apply_photo.html")

  	 @application.route("/upload_done", methods = ["POST"])
	def upload_done():
    		uploaded_files = request.files["file"]
    		uploaded_files.save("static/img/{}.jpeg".format(1))
    		return redirect(url_for("hello"))



	-> url_for('upload_done'), upload_done이라는 함수로 이동한다는 뜻
           
	-> application.py에 upload_done 함수 생성

	-> /apply에 접근해 화면을 띄우고 정보를 입력해 /applyphoto로 넘어갔을때 location, cleaness ~ 입력 정보를 받음

	-> 받은 입력 정보를 토대로 apply_photo.html 화면을 띄움

	-> /upload_done이라는 곳으로 보내겠다

 	-> uploaded_files = request.files["file"] // apply_photo.html에서 작성한 file이란 이름으로 된 것을 받음

	-> 사진 같은 경우에는 static이라는 하위 경로를 만들어줘야함, Flask 파이썬이 이해할 수 있는 방법으로 입력하는 것

	-> uploaded_files.save("static/img/{}.jpeg".format(1)) // static폴더 아래 img 폴더 아래 저장함

	-> return redirect(url_for("hello")) // 업로드 이후 hello 라는 함수로 다시 보내줌, 홈 화면 전환

   