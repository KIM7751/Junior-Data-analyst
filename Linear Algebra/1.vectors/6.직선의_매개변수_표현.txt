# 선형대수에서 다루는 데이터는 개수나 형태에 따라 크게 스칼라(scalar), 벡터(vector), 행렬(matrix), 텐서(tensor) 유형으로 나뉨

# 스칼라 : 숫자 하나로 이루어진 데이터

	보통 x와 같이 알파벳 소문자로 표기하며 실수(real number)인 숫자 중의 하나이므로 실수 집합 R의 원소라는 의미에서 다음처럼 표기
	 
	x∈R

# 벡터 : 여러 숫자로 이루어진 데이터 레코드(data record), 여러 개의 숫자가 특정한 순서대로 모여 있는 것을 의미

           붗꽃을 예를들면 꽃받침의 길이 x₁, 꽃받침의 폭 x₂ 꽃잎의 길이 x₃, 꽃잎의 폭 x₄ 4개의 숫자를 측정할 수 있음, 이렇게 측정된 4개의 숫자는 한 송이의 붓꽃에서 나온 데이터이므로 하나의 묶음(tuple)으로 묶어 놓는 것이 좋음

           숫자의 순서 유지하는 것이 중요

           붓꽃의 크기 벡터는 4개의 데이터 (x₁,x₂,x₃,x₄)가 하나로 묶여 있는데 이를 선형대수 기호로는 하나의 문자 x로 표기

           벡터는 복수의 가로줄, 즉 **행(row)**을 가지고 하나의 세로줄, 즉 **열(column)**을 가지는 형태로 위에서 아래로 내려써서 표기

           하나의 벡터를 이루는 데이터의 개수가 n개이면 이 벡터를 n-차원 벡터(n-dimensional vector)라고 표기

	x∈Rⁿ

※ 넘파이를 사용한 벡터 표현

           넘파이는 선형대수 문제를 풀 때 사용하는 파이썬 패키지

           넘파이를 사용하여 벡터를 표현할 때는 벡터를 다음처럼 열의 개수가 하나인 2차원 배열(array) 객체로 표현

	x1 = np.array([[5.1], [3.5], [1.4], [0.2]])
	x1
	
	array([[5.1],
       	         [3.5],
       	         [1.4],
       	         [0.2]])

           이때 배열의 차원은 벡터의 차원과 다른 의미

           위에서 설명한 벡터의 차원은 원소 개수를 뜻함
   
           배열은 원소 개수가 몇 개이든 한 줄로 나타낼 수 있다면 1차원 배열(1-dimensional array), 

           원소를 가로와 세로가 있는 여러 줄의 직사각형 형태로 나타낼 수 있으면 2차원 배열(2-dimensional array)이라고 함


※ 넘파이는 1차원 배열 객체도 대부분 벡터로 인정, 벡터가 마치 하나의 행처럼 표시되어도 실제로는 열이라는 점에 주의

	x1 = np.array([5.1, 3.5, 1.4, 0.2])
	x1

	array([5.1, 3.5, 1.4, 0.2])
	
	사이킷런 패키지에서 벡터를 요구하는 경우에는 반드시 열의 개수가 1개인 2차원 배열 객체를 넣어야 함
	

# 행렬 : 이러한 벡터, 즉 데이터 레코드가 여럿인 데이터 집합 


# 텐서 : 같은 크기의 행렬이 여러개 있는 것 

--------------------------------------------------------------------------------------------------------------------------

직선의 매개변수 표현

- 벡터를 하나 정의하자

	→ 
	v   = [ 2
	         1 ]

- 만들 수 있는 모든 벡터가 집합 S에 있다고 정의

- v 와 어떤 스칼라(실수) c를 곱함
	         →
	S = { c v | c ∈ R }  	

- c = 2  

	→ 
	2v   = [ 4
	           2 ]

- 같은 직선에 있지만 2배 만큼 길게 R²(2차원 실좌표공간)에 그릴 수 있음

- c = 1.5 

              → 
	1.5v   = [ 3
	            1.5 ]

- 어떤 스칼라(실수)를 곱해도 나타낼 수 있다는 것을 알 수 있음

- 한 벡터를 기준으로 그린 직선은 "동일선상"에 존재하는 벡터의 집합임 = v와 스칼라를 곱한 모든 점의 집합으로 얻은 직선

- 기울기는 1/2 (y값 증가량 / x값 증가량)

- 정리하자면 집합의 모든 벡터를 위치 벡터로 그린다면 원점을 지나면서 기울기가 1/2인 직선이 됨
				  
  → 
- v 는 직선상의 벡터, 기울기 벡터라고 할 수 있음

- 만약 같은 기울기를 가진 다른 직선을 표현, 구체적으로 (2, 4)를 지나는 평행한 직선은 어떻게 나타낼까?

	→ 
	x = [ 2     
       	       4 ]

- 원점을 기준으로 x 벡터를 그리고 평행한 직선을 그려보자

- 평행한 v, x 위치 벡터를 기반 직선 완성 후 

- v 기반 직선상에 있는 임의의 벡터에 벡터 x를 더한다면 

- x 기반 직선의 대응하는 점에 나타남
 





