# 선형대수에서 다루는 데이터는 개수나 형태에 따라 크게 스칼라(scalar), 벡터(vector), 행렬(matrix), 텐서(tensor) 유형으로 나뉨

# 스칼라 : 숫자 하나로 이루어진 데이터

	보통 x와 같이 알파벳 소문자로 표기하며 실수(real number)인 숫자 중의 하나이므로 실수 집합 R의 원소라는 의미에서 다음처럼 표기
	 
	x∈R

# 벡터 : 여러 숫자로 이루어진 데이터 레코드(data record), 여러 개의 숫자가 특정한 순서대로 모여 있는 것을 의미

           붗꽃을 예를들면 꽃받침의 길이 x₁, 꽃받침의 폭 x₂ 꽃잎의 길이 x₃, 꽃잎의 폭 x₄ 4개의 숫자를 측정할 수 있음, 이렇게 측정된 4개의 숫자는 한 송이의 붓꽃에서 나온 데이터이므로 하나의 묶음(tuple)으로 묶어 놓는 것이 좋음

           숫자의 순서 유지하는 것이 중요

           붓꽃의 크기 벡터는 4개의 데이터 (x₁,x₂,x₃,x₄)가 하나로 묶여 있는데 이를 선형대수 기호로는 하나의 문자 x로 표기

           벡터는 복수의 가로줄, 즉 **행(row)**을 가지고 하나의 세로줄, 즉 **열(column)**을 가지는 형태로 위에서 아래로 내려써서 표기

           하나의 벡터를 이루는 데이터의 개수가 n개이면 이 벡터를 n-차원 벡터(n-dimensional vector)라고 표기

	x∈Rⁿ

※ 넘파이를 사용한 벡터 표현

           넘파이는 선형대수 문제를 풀 때 사용하는 파이썬 패키지

           넘파이를 사용하여 벡터를 표현할 때는 벡터를 다음처럼 열의 개수가 하나인 2차원 배열(array) 객체로 표현

	x1 = np.array([[5.1], [3.5], [1.4], [0.2]])
	x1
	
	array([[5.1],
       	         [3.5],
       	         [1.4],
       	         [0.2]])

           이때 배열의 차원은 벡터의 차원과 다른 의미

           위에서 설명한 벡터의 차원은 원소 개수를 뜻함
   
           배열은 원소 개수가 몇 개이든 한 줄로 나타낼 수 있다면 1차원 배열(1-dimensional array), 

           원소를 가로와 세로가 있는 여러 줄의 직사각형 형태로 나타낼 수 있으면 2차원 배열(2-dimensional array)이라고 함


※ 넘파이는 1차원 배열 객체도 대부분 벡터로 인정, 벡터가 마치 하나의 행처럼 표시되어도 실제로는 열이라는 점에 주의

	x1 = np.array([5.1, 3.5, 1.4, 0.2])
	x1

	array([5.1, 3.5, 1.4, 0.2])
	
	사이킷런 패키지에서 벡터를 요구하는 경우에는 반드시 열의 개수가 1개인 2차원 배열 객체를 넣어야 함
	

# 행렬 : 이러한 벡터, 즉 데이터 레코드가 여럿인 데이터 집합 


# 텐서 : 같은 크기의 행렬이 여러개 있는 것 

--------------------------------------------------------------------------------------------------------------------------

벡터 : 크기와 방향을 동시에 나타냄

- 어떤 물체가 5마일로 움직인다 --> 이 정보 자체는 벡터가 아님, 단지 크기를 말함, 어느 방향인지는 모름, 스칼라라고 함

- 시속 5마일로 동쪽으로 움직인다 --> 벡터가 되었고 이 자체를 더이상 속력이라고 부르지 않음, 속도라고 함

- 2차원으로 표현할 수 도 있음, 선형대수는 n차원 만큼 확장할 수 있고 3차원 너머서는 상상하기 어렵지만 수학적으로 다룰 수 있음(벡터 내부 데이터의 수가 곧 벡터의 차원(Dimension))

- 쉬운 2차원 벡터를 표현하는 방법 중 하나는 5의 크기를 가지는 화살표를 그리는 것

- 오른쪽으로 길이가 5인 화살표를 그릴 수 있음, 길이는 속력을 나타냄, 방향은 동쪽 오른쪽으로 화살표를 표시함

- 길이와 방향이 같은 두 벡터가 있다면 이것은 같은 벡터라고 이야기 할 수 있음, 시작점과 관계없이

- 일반적으로는 벡터를 변수로 표현한다면 소문자를 사용해 표현함, 작은 화살표를 그 위에 그려주면 됨 

                                                         ->
				    v  = 

- 일반적으로는 숫자 2개로 벡터를 표현하는데 각 차원에 대해서 얼마만큼 움직였는지 표시 

				    ->
				    v  = (5, 0)  = 선형대수학에서는 [ 5    첫 번째 좌표는 수평으로 얼마나 움직였나
							      0 ]   두 번째 좌표는 수직으로 얼마나 움직였나

- 3차원까지는 시각화 할 수 있지만 4차원부터는 좀 추상적임, 차원이 높아지면 수학적으로 표현하는게 훨씬 나음
