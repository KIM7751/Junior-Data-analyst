CSS의 등장

1. 웹 페이지들에 대한 예쁘고 보기 좋게 하고 싶은데서 오는 불만들이 생김

2. 사람들은 기존 html tag에 꾸미는 요소를 추가하는 방법으로 쉽게 접근함 대표적으로 <font>

3. <font color = 'red'> txt </font> - txt 색깔을 빨간색으로 디자인 하는 tag

4. 디자인으로써 코드는 정보가 아니라고 이야기 할 수 있음

5. 만약 <a>가 4개가 아닌 1억개로 매일 같이 색깔을 바꿔달라고 하면 어떻게 할까?

6. 웹 브라우저가 인식하기 위해서는 CSS코드를 HTML문법으로 이야기해줘야함

7. <style>a { color : red;}</style> - a 태그의 txt를 모두 빨간색으로 바꿔주는 CSS 코드

8. 핵심은 기존에 <font> tag를 4개 중복해서 썼다면 CSS는 중복 코드를 제거해준다는 것임

9. 가독성이 높아지고 디자인과 관련된 <style> tag 안에 코드를 목적에 맞게 추가/제외 시켜 활용 가능

10. HTML 정보 | CSS 디자인

--------------------------------------------------------------------------------------------------------------------------------


CSS 사용법

1. CSS 링크를 클릭한 상태의 화면이라는 점을 표현하고 싶음

2. CSS text를 감싸고 있는 a tag에 직접 CSS 코드를 넣을 것임

3-1. 웹브라우저 입장에서는 HTML 과 CSS를 구분하기 위해서 tag에 CSS 효과를 주고 싶을 때 약속을 하게 됨

3-2. <a style = "color : red"> CSS </a> style 속성이 위치하고 있는 이 tag에 적용할 것이다!

4. "color : red" - html 속성 // 그 값으로 반드시 CSS 효과가 들어온다 - style 속성

※ 지난 시간에 배웠던 웹페이지에서 주고 싶은 효과를 누구에게 줄 것인가를 선택하는 것으로 
   <style> a {color : black}; <style> 으로 작성함 
   이때 "a"를 선택자, selector 라고 하며 "color : black" 선택자에게 지정될 효과, 선언(declaration)이라고 함
   
※ 선언은 style속성을 tag안에 직접 사용한 경우 style 속성이 위치한 tag에 효과를 줄 것이기 때문에 선택자를 사용할 필요가 없음

∴ 웹페이지 안에 CSS를 삽입하는 방법 
   1. style tag 사용(선택자, 선언)
   2. style 속성 사용(선언)

5. a tag의 밑줄을 없애고 싶을때 style tag 내에 text -decoration : none; 입력

6. a tag CSS 항목만 밑줄을 긋고 싶어 해당 a tag내 style 속성에 text - decoration : underline; 입력

7. description이 시작되고 끝나는 것을 구분하기 위해 구분자 세미 콜론을 사용

--------------------------------------------------------------------------------------------------------------------------------


CSS 속성 스스로 알아내기

1. CSS에서 어떤 효과를 의미하는 용어 "property"

2. h1 tag의 text 사이즈를 키우고 가운데 정렬을 하고 싶음

3. 기본적인 CSS 사용법을 아는 우리는 검색엔진을 활용하면 모든 property를 외울 필요가 없어짐

4. 각각 css text size property, css text center property를 이용해 검색해 본 결과 

5. font-size: 45px, text-align : center 해법을 찾아낼 수 있었음 

--------------------------------------------------------------------------------------------------------------------------------

CSS 선택자 스스로 알아내기

- 학습 목표 : 1) 모든 링크는 기본적으로 검정색, 2) 사용자가 방문했던 각각에 링크는 회색, 3) 현재 머무는 페이지는 빨간색으로 표시

1. 첫번째 a 선택자를 지정한 후 검정색으로 지정 <style> a { color : black } </style>

2. 두번째 방문했던 링크를 회색으로 만듦 - 기존에 배웠던 방식 <a style = "color : gray;"> tag 안에 스타일 속성을 이용해 지정함, 단점으로 중복 태그가 발생하며 이 문제를 어떻게 해결할까?

3. a tag의 text들을 그룹으로 묶고 그룹에 대해서 폰트 컬러를 회색으로 줄 것 - class 라는 HTML 속성을 이용

4. <a class = "saw"> saw라는 class 값을 가지는 tag 2개를 만듦

5. saw라는 class 값을 가지고 있는 tag에 대해서 폰트 컬러 회색을 줄 것 

6. <style> a { color : black }  .saw{color : gray;} </style> - .표기를 통해 class 값임을 명시해 줌, class = 그루핑하다

7. 세번째 머물고 있는 페이지를 표시하려고 함 - <a class = "saw active"> | <style> a { color : black }  .saw{color : gray;} .active{color : red;} </style>

8. class 라는 속성의 값은 1) 여러 개의 값이 들어올 수 있고 2) 여러개의 선택자를 통해서 하나의 tag를 공동으로 제어 할 수 있다

9. 빨간색이 된 근본적인 원인을 살펴보자면 style tag 안에 가장 마지막에 등장하는 선택자가 우선 순위가 높음 <style> a { color : black }  .saw{color : gray;} .active{color : red;} </style>

10. 반대로 이야기하면 class active 선택자가 앞으로 당겨지면 적용이 안된다고 볼 수 있음 - 우선 순위 높은 선택자를 이용할 필요성이 있음

11. <a class = "saw"  id = "active"> | <style> a { color : black } #active{color : red;} .saw{color : gray;} </style>

12. ID 선택자가 Class 선택자 보다 앞에 있음에도 빨간색이 적용되는 것을 볼 수 있음, 위에 언급했던데로 stlye tag 안에 가장 마지막에 등장하는 선택자가 우선순위가 높음

13. ID 선택자 > Class 선택자 > TAG 선택자 

14. 왜? - 좀 더 구체적인 것을 포괄적인 것보다 우선순위를 높임, tag 선택자를 통해 전체적인 tag의 디자인을 쭉 해내고 예외적인 것들의 id 선택자를 두면서 디자인하고 코딩하는게 효율적이기 때문

15. CSS selector를 검색해 우리가 원하는 선택자를 보면서 보다 똑똑한 코드를 작성할 수 있음


--------------------------------------------------------------------------------------------------------------------------------


웹 지식

1. 1990년 스위스 웹이 시작(info.cern.ch) 일반인들에게 "인터넷"이 대중화되는 큰 사건

2. 웹 브라우저 (request : 요청 ) <=> 웹 서버 (response : 응답) 
   client 컴퓨터 <=> sever 컴퓨터

3. 웹 서버를 사용할 수 있다 = 내 컴퓨터 문서 전 세계 누구나 웹 브라우저로 가져다 볼 수 있게 한다

4. 웹 서버: 언제 접속할지 모르기 때문에 항상 켜져있어야 함 
	서버 제공 기업 -> 웹 호스팅 기업

5. 대표적인 서비스 페이지 Git hub, 무료로 우리가 만든 웹사이트를 접속할 수 있게끔 함

6. 저장소에 작업 소스를 업로드 후에 세팅에 들어가 git page를 눌러 웹서버 사용 설정함
   방문자는 우리가 만든 웹페이지를 접속할 수 있게됨 즉, 우리가 웹 호스팅을 할 수 있음

7. 웹 서버를 운용할 수 있는 프로그램 bitnami를 window 운영체제에 다운로드 함
  
  3307, bitnami 설치 경로에 있는 manage 툴을 실행해 aphache를 실행/중단을 진행함
  
  컴퓨터에 bitnami가 설치한 htdocs 경로 안에 index.html 파일이 저장되어 있음

  우리의 컴퓨터엔 웹 브라우저와 웹 서버가 모두 한 대의 컴퓨터 안에 설치된 상태

  웹 브라우저로 웹 서버를 통해서 htdocs 밑에 있는 index.html 파일을 가져오고 싶음

  http://127.0.0.1/index.html 주소 창에 입력했음

  127.0.0.1 internet protocol address IP 주소

  그리고 웹 브라우저가 설치되어 있는 각자의 컴퓨터 웹서버를 가리키는 약속된 주소

  /index.html 웹 브라우저가 자신의 컴퓨터에 설치된 웹 서버에 접속해서 /index.html 원함

  웹 서버는 htdocs 경로에서 파일을 찾도록 기본적으로 설정되어 있는 상태

  htdocs 경로에서 index.html 파일을 읽어 웹 브라우저에게 전송

  웹 브라우저는 해석해 화면에 표시하는 프로세스

  http:// 웹 브라우저가 웹 서버에 요청 / 웹 서버가 index.html 파일을 열어서 웹 브라우저 전송

  file:// 웹 서버는 이 과정에 개입하지 않음 웹 브라우저가 직접 index.html 파일 읽어 화면 표시

  file:// 파일 경로에서 직접 여는 것

  http:// 웹 서버와 웹 브라우저가 서로 통신할때 사용하는 통신 규약

  Hyper Text Transfer Protocol

  현재 우리가 사용하는 컴퓨터엔 웹 서버, 브라우저가 동시에 설치되어 있어 별 차이가 없음

  하지만 서로 다른 컴퓨터에 있는 웹 서버, 브라우저의 통신엔 http://가 필요함

8. 아파치 HTTP 서버는 아파치 소프트웨어 재단에서 관리하는 오픈 소스, 크로스 플랫폼 HTTP 웹 서버 소프트웨어
   
   BSD, 리눅스 등 유닉스 계열 뿐 아니라 마이크로소프트 윈도우나 노벨 넷웨어 같은 기종에서도 무료로 운용할 수 있음

9. 사설 IP와 공인 IP의 차이
		
		공인IP (Public IP)  			|	  	사설 IP (Private IP)
할당 주체		ISP(인터넷 서비스 공급자)		|		라우터(공유기)
할당 대상		개인 또는 회사의 서버(라우터)		|		개인 또는 회사의 기기
고유성		인터넷 상에서 유일한 주소		|		하나의 네트워크 안에서 유일
공개 여부		내/외부 접근 가능			|		외부 접근 불가능

10. 스마트폰도 한 대의 컴퓨터로 볼 수 있음

11. 127.0.0.1 모든 컴퓨터가 자기 자신을 부르기로 한 약속 <-> 사설 IP주소

12. 스마트폰(웹 브라우저)과 랩탑(웹 서버)의 IP 주소를 맞춰 접속해 보았으나 방화벽에 막혀 접속하지 못함

13. iframe 코드 하나로 웹 페이지에 동영상을 삽입할 수 있게 됨

14. disqus create website -> 코드를 복사해 댓글 기능을 추가할 수 있음

15. 단 웹 서버 apache를 이용해 운용 중인 상태여야 가능

16. localhost/127.0.0.1/~ 댓글 기능 확인 가능



HTML TAG

1. <strong></strong> 글씨 강조

2. <u></u> 밑줄 글씨 강조

3. <h1 ~ h6> 제목 tag

4. <br> 시각적 여백 효과, 줄바꿈이라는 시각적인 의미만을 부여 닫는 tag 없음

5. <img> 이미지 웹페이지 추가, 
	 tag를 보충하는 속성(attribute) <img src(=source), width>

6.  <p></p> 단락 설정, 닫는 tag가 존재 정해진 여백이 있음,
	     CSS 활용해 정교한 수정 가능

7. <li></li> 목록을 구성하는 자식 tag(list)

8. <ul></ul> 목록을 구분 짓는 부모 tag,  unordered list 

9. <ol> </ol> 목록을 구분 짓는 부모 tag,  ordered list 

10. <title> 웹페이지 제목, 문서의 구조를 나타냄

11. <meta charset> 인코딩 형식, 문서의 구조를 나타냄

12. <head> 본문을 설명

13. <body> 본문을 나타냄  

14. <html> tag를 전체로 묶는 최고 태그

15. <a> html tag의 꽃, 참조 속성 href =, 
           target='_blank' 새로운 웹페이지에서 오픈,
           링크 부가 설명 title =

