JavaScript 입문

1. HTML을 이용해서 웹페이지를 만든 후에, JavaScript를 이용해 사용자와 상호작용할 수 있도록 기능을 추가

2. HTML이 정보라는 멈춰 있는 이미지를 그리는 것이라면 JavaScript는 그 이미지를 영화처럼 움직이게 함

3. JavaScript 최종 목표를 주간, 야간 모드로 전환이 가능하도록 만들 것임

4. <input type = "button" value = "night" 타입과 벨류를 이렇게 작성했을때 night라는 버튼이 생김

5. <input type = "button" value = "night" onclick " ~ " 온클릭이라는 속성의 값은 자바스크립트가 와야한다는 규칙이 있음

6. 온클릭은 해당 버튼을 클릭했을 때 JavaScript 코드를 실행시킬 것입니다라고 이야기할 수 있음

7. 정리하자면 JavaScript는 사용자와 상호작용하는 언어이다, 웹브라우저는 한번 화면에 출력되면 자기자신을 바꿀 수 없다

8. JavaScript를 이용하면 JavaScript 코드에 따라 정적인 부분을 개선할 수 있음

------------------------------------------------------------------------------------------------

HTML과 JavaScript의 만남1 (script tag)

1. 기본적으로 JavaScript는 HTML 위에서 동작하는 언어임

2. 어떻게 하면 HTML이라는 컴퓨터 언어에 완전히 다른 문법을 가진 JavaScript를 넣을까?

3. JavaScript를 넣는 방법은 우선 웹브라우저한테 HTML의 코드로 지금부터 JavaScript가 시작됩니다라고 알려줘야함

4. <script> tag 안쪽에 JavaScript가 오도록 약속되어 있기 때문에 안쪽에 있는 코드를 JavaScript로 해석함

5. <script> document.write('hello world'); 화면 출력됨을 알 수 있음

6. hello word를 직접 작성해서 화면 출력하는 것과 어떤 부분에서 차이가 나는지 의문이 듦

7. 차이가 확연히 나게하는 방법으로는 1+1을 입력해보면 되는데 직접 작성했을 때 1+1이 정적인 상태로 그대로 출력됨

8. 하지만 JavaScript로 작성한 1+1은 계산기와 같은 결과값으로 2라는 출력값을 보임

9. 웹페이지에 JavaScript를 글씨로 출력할 때는 document.write를 쓴다고 알아두자

------------------------------------------------------------------------------------------------

HTML과 JavaScript의 만남2 (event)

1. 이벤트는 자바스크립트가 사용자와 상호작용하는데 핵심적인 역할을 할 것

2. 기본 html 구성 요소를 작성해주고 <body> tag에 hi라는 버튼을 만들 것임

3. <input type = "button" value = "hi">

4. hi라는 것을 눌렀을 때 경고창을 뜨게 하고 싶음

5. 자바스크립트에서 경고창은 alert이라고 어제 별도 강의 API 수업 중에 배웠던 기능임

6. <input type = "button" value = "hi" onclick = "alert('hi')">

7. 첫번째, 온클릭이라는 속성의 값은 자바스크립트가 와야한다는 규칙이 있었음을 이전에 언급함 

8. 두번째, 온클릭 속성의 속성 값은 웹브라우저가 기억하고 있다가 온클릭 속성이 위치하고 있는 tag의 UI를 사용자가 눌렀을때

9. JS코드를 JS 문법에 따라 해석해 적혀있는데로 웹 브라우저가 동작함

10. 이렇게 웹브라우저에 위에서 일어나는 일들을 "이벤트" 라고 함

11. 어떤 이벤트가 일어났을 때 어떤 JS가 실행되도록 하는 것이 바로 "온클릭"인 것

12. 웹브라우저에 일어날 수 있는 이벤트는 얼마나 있을까?

13. 웹브라우저는 웹브라우저 위에서 일어나는 여러 사건 중에 기념할 만한 것 10 ~ 20개를 정의

14. 우리는 그 이벤트를 이용해 사용자와 상호작용하는 웹페이지 웹사이트를 만들 수 있음

15. 키를 눌렀을 때 이벤트창을 뜨게 하고 싶어 javascript keydown event attribute 검색해보면

16. <input type = "text" onkeydown = "alert('key down!')"> 검색 결과로 해당 코드를 작성할 수 있음

17. 이번 시간에 배운 주인공들은 on으로 시작하는 속성들이었고, 이런 속성들을 이벤트라고 함

18. 웹브라우저 위에서 일어나는 여러가지 사건들이 있는데 그 중에 사용자에게 유용할만한 이벤트 10 ~ 20개를 정리해 놓은 것임

------------------------------------------------------------------------------------------------

HTML과 JavaScript의 만남3 (console)

1. 우리는 경우에 따라서 꼭 파일이 아니더라도 어떤 코드를 실행해야하는 상황이 있음

2. 그런 경우엔 F12 페이지 소스보기에서 콘솔이라는 것을 찾아볼 수 있음

3. 콘솔이라는 것을 이용하면 파일을 만들지 않고도 자바스크립트를 실행할 수 있음

4. 예를 들어 우리가 만든 3.html 본문 내용의 글자 수를 알고 싶을 때 본문을 콘솔창에 복붙하여 따옴표를 붙여 str 처리 함

5. 자바스크립트 문자열의 개수를 알려주는 명령인 .length를 입력하고 이전 시간에 배웠던 팝업창을 띄워주는 alert을 씌워줌 

6. alert("~ 본문 ~".length)

7. 3.html 에 작성되어있는 텍스트는 총 1,445개임을 팝업창에서 알 수 있고 이렇게 페이지를 따로 만들어 실행하는게 아닌 콘솔창에서 실용적으로 활용이 가능함

8. 콘솔창을 이용해 실행시키는 자바스크립트는 웹페이지를 대상으로 실행된다고 보면됨

9. 쉬운 이해를 돕기 위한 예를 들자면 페이스북 페이지 댓글 추첨을 진행한다고 가정을 해보자

10. 페이지 소스보기를 눌러 댓글에 해당하는 태그를 콘솔에 복붙하여 랜덤 추첨하는 코드를 작성하면 추첨 대상 이름이 출력됨을 볼 수 있음

11. 이미 만들어져있는 홈페이지를 나의 필요에 따라서 맥락적으로 간단하면서도 나에게 딱 맞는 코드를 작성해서 문제 해결이 가능하다는 이야기임 

------------------------------------------------------------------------------------------------

JavaScript 데이터 타입

1. 자바스크립에는 어떤 데이터 타입(=자료형)이 있는지 알아보자

2. 검색해봤을 때 6개의 데이터 타입과 객체가 나오는데 이번 시간에 알아볼 자료형은 문자열과 숫자임

3. 홈페이지 관리자도구를 누르고 콘솔창에 숫자를 입력하면 출력, 연산이 되는 것을 알 수 있음

4. 산술 연산자로 대표적인 사칙연산 '-', '+', '/', '*' 모두 이용 가능함

5. 문자열은 작은 따옴표, 큰 따옴표를 활용해 입력하면 문자열로 출력 가능함, 따옴표가 없을 땐 에러 발생

6. 문자열에는 유용한 기능이 있는데 대표적으로 글씨의 개수를 알려주는 .length 같은 메서드가 있음

7. 그 밖에도 javascript string property를 검색하면 문자열과 관련된 여러 기능들을 알 수 있음

------------------------------------------------------------------------------------------------

변수와 대입연산자

1. 변수는 바뀔 수 있는 값을 의미(variable)

2. 대입 연산자는 오른쪽 항의 값을 왼쪽의 변수에 대입한다는 의미로 "=", 같다(equal)에 의미가 아님

3. 숫자에 대입 연산자를 넣어 1 = 2 라고 작성하면 오류가 발생함

4. 항상 숫자 1이기 때문에 오류가 발생하는 것, 우리는 이것을 "항상 상"을 넣어 상수라고 함(constant)

5. 자바스크립트 관용상 변수를 작성할 때 var name = "kim" 맨 앞에 var을 붙이는게 좋은 습관이라고 함